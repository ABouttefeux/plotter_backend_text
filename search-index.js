var searchIndex = JSON.parse('{\
"plotter_backend_text":{"doc":"plotter_backend_text","t":[13,13,13,13,13,4,13,3,13,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,12],"n":["Circle","Cross","Empty","HLine","Pixel","PixelState","Text","TextDrawingBackend","VLine","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","draw_chart","draw_line","draw_pixel","draw_text","ensure_prepared","eq","eq","estimate_text_size","fmt","fmt","from","from","get_size","hash","hash","into","into","into_drawing_area","iter","iter_mut","ne","ne","new","pixels","pixels","present","set_state","size_x","size_x","size_y","size_y","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_state","0","0"],"q":["plotter_backend_text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plotter_backend_text::PixelState",""],"d":["the pixel a circle filled <code>@</code> or not <code>O</code>","The pixel is <code>+</code>","The pixel is empty.","The pixel is <code>-</code>","The pixel is <code>x</code>","State of the pixel in the canvas.","The pixel is a character.","Text Drawing Backend for the Plotters library.","The pixel is <code>|</code>","","","","","","","","","","Draw a chart on a given drawing area. With thw given range â€¦","","","","","","","","","","","","","","","","","","Iterate over the pixels of the canvas.","Iterate over the pixels of the canvas.","","","Creates a new <code>TextDrawingBackend</code> with the given size.","Getter on the pixels.","Pixel of the canvas.","","Set the pixel at the given position to the given state.","Getter on the width of the canvas.","Width of the canvas.","Getter on the height of the canvas.","Height of the canvas.","","","","","","","","","Update the pixel at the given position to the given state.","",""],"i":[1,1,1,1,1,0,1,0,1,1,2,1,2,1,2,1,2,2,0,2,2,2,2,1,2,2,1,2,1,2,2,1,2,1,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,2,1,2,2,3,4],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["pixelstate",4]],[[],["textdrawingbackend",3]],[[]],[[]],[[]],[[["drawingarea",3],["str",15]],["result",4,[["drawingareaerrorkind",4]]]],[[],["result",4,[["drawingerrorkind",4]]]],[[["backendcolor",3]],["result",4,[["drawingerrorkind",4,[["error",3]]]]]],[[["str",15]],["result",4,[["drawingerrorkind",4]]]],[[],["result",4,[["drawingerrorkind",4,[["error",3]]]]]],[[["pixelstate",4]],["bool",15]],[[["textdrawingbackend",3]],["bool",15]],[[["str",15]],["result",4,[["drawingerrorkind",4]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["drawingarea",3,[["shift",3]]]],[[]],[[]],[[["pixelstate",4]],["bool",15]],[[["textdrawingbackend",3]],["bool",15]],[[["u32",15],["u32",15]]],[[]],null,[[],["result",4,[["drawingerrorkind",4,[["error",3]]]]]],[[["usize",15],["usize",15],["pixelstate",4]]],[[],["u32",15]],null,[[],["u32",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["usize",15],["pixelstate",4]]],null,null],"p":[[4,"PixelState"],[3,"TextDrawingBackend"],[13,"Text"],[13,"Circle"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};